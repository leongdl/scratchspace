FROM rockylinux:9

# Set environment variables
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV C4D_VERSION=2025
ENV C4D_LOCATION=/opt/cinema4d
ENV C4D_COMMANDLINE_EXECUTABLE=/opt/cinema4d/bin/Commandline

# Enable EPEL and additional repositories
RUN dnf install -y epel-release && \
    dnf config-manager --set-enabled crb

# Add AppStream BaseOS and Extra repositories
RUN dnf config-manager --set-enabled appstream && \
    dnf config-manager --set-enabled baseos && \
    dnf config-manager --set-enabled extras

# Install basic dependencies and required libraries for Cinema4D
RUN dnf update -y && \
    dnf install -y \
    wget \
    unzip \
    tar \
    gzip \
    bzip2 \
    which \
    procps-ng \
    awscli \
    jq \
    nc \
    ethtool \
    iputils \
    libX11 \
    gtk3 \
    libnotify \
    libxcrypt-compat \
    libxslt \
    harfbuzz-icu \
    enchant \
    libsecret \
    libXt \
    orc \
    libglvnd-glx \
    libglvnd-egl \
    mesa-libGLU \
    libgomp \
    libsoup \
    atk \
    pango \
    cairo \
    gdk-pixbuf2 \
    enchant2 \
    libatomic \
    libicu \
    libunwind \
    avahi-libs \
    python3.11 \
    python3.11-libs \
    python3.11-devel \
    traceroute \
    && dnf clean all

# Install specific RPM packages
RUN dnf install -y \
    webkit2gtk3-2.48.3-1.el9_6.x86_64 \
    libnotify-0.7.9-8.el9.x86_64 \
    && dnf clean all || true

# Install comprehensive library set for Cinema4D
RUN dnf install -y \
    openvdb \
    embree3 \
    woff2 \
    libcloudproviders \
    libtracker-sparql \
    compat-libffi3.1 \
    harfbuzz-icu \
    libnotify \
    gstreamer1 \
    gstreamer1-plugins-base \
    libbrotli \
    libgudev \
    orc \
    libsoup \
    enchant2 \
    libsecret \
    libatomic \
    atk \
    pango \
    gdk-pixbuf2 \
    cairo \
    cairo-gobject \
    harfbuzz \
    fontconfig \
    fribidi \
    libepoxy \
    at-spi2-atk \
    libwayland-cursor \
    libwayland-egl \
    libthai \
    freetype \
    pixman \
    graphite2 \
    at-spi2-core \
    json-glib \
    libdatrie \
    libicu \
    libxslt \
    lcms2 \
    libunwind \
    avahi-libs \
    libhyphen \
    && dnf clean all || true

# Create cinema4d user
RUN useradd -m -s /bin/bash cinema4d

# Set working directory
WORKDIR /opt/cinema4d

# Copy Cinema4D installer
COPY Cinema4D_2025_2025.0.2_Linux.sh /tmp/

# Make installer executable and run installation
RUN chmod +x /tmp/Cinema4D_2025_2025.0.2_Linux.sh && \
    /tmp/Cinema4D_2025_2025.0.2_Linux.sh --quiet --accept && \
    rm -f /tmp/Cinema4D_2025_2025.0.2_Linux.sh

# Set up Redshift plugin path (if Redshift is installed)
ENV g_additionalModulePath=/opt/maxon/cinema4dr2025.301/bin/plugins

# Ensure Python ensurepip is available for Cinema4D's Python
RUN if [ -f /opt/cinema4d/resource/modules/python/libs/linux64/python ]; then \
        /opt/cinema4d/resource/modules/python/libs/linux64/python -m ensurepip || true; \
    fi

# Set ownership
# RUN chown -R cinema4d:cinema4d /opt/cinema4d

# Use root user, do not wwitch to cinema4d user
# USER cinema4d

# Create rendering directory and copy test scene
RUN mkdir -p /rendering
COPY simple_cube_2025.c4d /rendering/

# Set default command
CMD ["/bin/bash"]